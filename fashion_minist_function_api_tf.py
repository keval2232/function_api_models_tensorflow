# -*- coding: utf-8 -*-
"""fashion_minist_Function_API_TF.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AykVAavDs1DpBCEKQGkSHPm3HR5Xx2sT
"""

from tensorflow.keras.layers import Input
from tensorflow.keras.layers import Dense,Flatten
import tensorflow as tf
from tensorflow.keras.models import Model
from tensorflow import keras

"""<h2>Step 1 </h2>
<h3>Input in fuctional API </h3>
"""

input_layer = tf.keras.Input(shape=(28, 28))

"""<h2>Step 2</h2>"""

flatten_layer = tf.keras.layers.Flatten()(input_layer)
first_dense = tf.keras.layers.Dense(512, activation=tf.nn.relu)(flatten_layer)

second_dense = tf.keras.layers.Dense(256, activation=tf.nn.relu)(first_dense)
third_dense=tf.keras.layers.Dense(128,activation=tf.nn.relu)(second_dense)
output_layer = tf.keras.layers.Dense(10, activation=tf.nn.softmax)(third_dense)
func_model = Model(inputs=input_layer, outputs=output_layer,name= "fashoin minist model")

func_model.summary()

keras.utils.plot_model(func_model, "my_first_model_with_shape_info.png", show_shapes=True)

#data set
mnist = tf.keras.datasets.fashion_mnist
(training_images, training_labels), (test_images, test_labels) = mnist.load_data()
training_images = training_images / 255.0
test_images = test_images / 255.0

func_model.compile(optimizer=tf.optimizers.Adam(),
                   loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

func_model.fit(training_images,training_labels,epochs=5)

func_model.evaluate(test_images,test_labels)